// Lexer definition for use with JLex
package forthcompiler;

import java_cup.runtime.SymbolFactory;
import java_cup.runtime.ComplexSymbolFactory;
%%
%cup
%unicode

%public
%{
  String pstring = new String();
  final int unknown = -1;
  ComplexSymbolFactory.Location left = new ComplexSymbolFactory.Location(unknown, unknown);
  ComplexSymbolFactory cf = new ComplexSymbolFactory();
  public SymbolFactory getSymbolFactory() { return cf; }
  int yyline = unknown - 1;
  int yycolumn = unknown - 1;
  int yychar = unknown;
  public int line_num() { return (yyline+1); }
  public ComplexSymbolFactory.Location left_loc() {
    return left;
  }
  public ComplexSymbolFactory.Location right_loc() {
    ComplexSymbolFactory.Location left = left_loc();
  return left;
  }
  public String buff() {return new String(yy_buffer,yy_buffer_index,10).trim();}
%}
%eofval{
  return cf.newSymbol("EOF", sym.EOF, left_loc(), left_loc());
%eofval}
LETTER = ({CAPITAL}|{SMALL})
CAPITAL = [A-Z\xC0-\xD6\xD8-\xDE]
SMALL = [a-z\xDF-\xF6\xF8-\xFF]
DIGIT = [0-9]
IDENT = ({LETTER}|{DIGIT}|['_'])
%state COMMENT
%state CHAR
%state CHARESC
%state CHAREND
%state STRING
%state ESCAPED
%%
<YYINITIAL>: { return cf.newSymbol("", sym._SYMB_0, left_loc(), right_loc()); }
<YYINITIAL>; { return cf.newSymbol("", sym._SYMB_1, left_loc(), right_loc()); }
<YYINITIAL>begin { return cf.newSymbol("", sym._SYMB_2, left_loc(), right_loc()); }
<YYINITIAL>if { return cf.newSymbol("", sym._SYMB_3, left_loc(), right_loc()); }
<YYINITIAL>then { return cf.newSymbol("", sym._SYMB_4, left_loc(), right_loc()); }
<YYINITIAL>until { return cf.newSymbol("", sym._SYMB_5, left_loc(), right_loc()); }
<YYINITIAL>"(" { yybegin(COMMENT); }
<COMMENT>")" { yybegin(YYINITIAL); }
<COMMENT>. { /* skip */ }
<COMMENT>[\n] { /* skip */ }

<YYINITIAL>_.* { return cf.newSymbol("", sym.ForthWord, left_loc(), right_loc(), yytext().intern()); }

<YYINITIAL>{DIGIT}+ { return cf.newSymbol("", sym._INTEGER_, left_loc(), right_loc(), Integer.valueOf(yytext())); }

<YYINITIAL>[ \t\r\n\f] { /* ignore white space. */ }

. { throw new Error("Illegal Character <"+yytext()+">"); }
